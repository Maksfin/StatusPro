 // Fonts generator
@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}

 // Inline-block
@mixin inlineblock ($value: middle){
	display: inline-block;
	vertical-align: $value;
}

// Absolute centered
@mixin center {
	position: absolute;
	top: 0;
	right: 0;
	left: 0;
	bottom: 0;
	margin: auto;
}

// Clearfix
@mixin clearfix{

	&:before,
	&:after {
		content: "";
		display: table;
	}

	&:after {
		clear:both;
	}
}


// Color placeholder
@mixin placecolor($color: #000000) {
    &::-webkit-input-placeholder {
        color: $color;
    }
    &:-moz-placeholder {
        color: $color;
    }
    &::-moz-placeholder {
        color: $color;
    }
    &:-ms-input-placeholder {
        color: $color;
    }
}
@mixin border-radius ($radius: 5px) {
	-webkit-border-radius: $radius;
	-moz-border-radius:    $radius;
	border-radius:         $radius;

	-moz-background-clip:    padding;
	-webkit-background-clip: padding-box;
	background-clip:         padding-box;
}

@mixin box-shadow ($string...) {
	-webkit-box-shadow: $string;
	-moz-box-shadow:    $string;
	box-shadow:         $string;
}

@mixin box-sizing ($string: border-box) {
	-webkit-box-sizing: $string;
	-moz-box-sizing:    $string;
	box-sizing:         $string;
}

@mixin transition ($transition...) {
	-webkit-transition: $transition;
	-moz-transition:    $transition;
	-ms-transition:     $transition;
	-o-transition:      $transition;
	transition:      $transition;
}

@mixin transform ($transform...) {
	-webkit-transform: $transform;
	-moz-transform:    $transform;
	-ms-transform:     $transform;
	-o-transform:      $transform;
	transform:      $transform;
}

@mixin vertical-gradient($top-color: #ffffff, $bottom-color: #000000) {
	background-color: $top-color;
	background-image: -webkit-gradient(linear, left top, left bottom, from($top-color), to($bottom-color)); /* Chrome, Safari 4+ */
	background-image: -webkit-linear-gradient(top, $top-color, $bottom-color); /* Chrome 10-25, iOS 5+, Safari 5.1+ */
	background-image: -moz-linear-gradient(top, $top-color, $bottom-color); /* Firefox 3.6-15 */
	background-image: -o-linear-gradient(top, $top-color, $bottom-color); /* Opera 11.10-12.00 */
	background-image: linear-gradient(to bottom, $top-color, $bottom-color); /* Chrome 26, Firefox 16+, IE 10+, Opera 12.10+ */
	filter: progid:DXImageTransform.Microsoft.gradient(startColorStr=$top-color, EndColorStr=$bottom-color);
}

// Sprite generator
@mixin get-sprite ($map, $sprite, $repeat: no-repeat, $height: true, $width: true) {
	$sprite-image: sprite-file($map, $sprite);
	$sprite-map: sprite-url($map);
	$sprite-position: sprite-position($map, $sprite);
	$sprite-layout: smart;

	background: $sprite-map $sprite-position no-repeat;

	@if ($height == true) {
		$sprite-height: image-height($sprite-image);
	 	height: $sprite-height;
	}

	@if ($width == true) {
		$sprite-width: image-width($sprite-image);
		width: $sprite-width;
	}
}


@mixin fontSize($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}